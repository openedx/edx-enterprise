[tox]
envlist = py35-django22,py38-django{22,30}

[doc8]
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D106 = Missing docstring in public nested class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
; D213 = Multi-line docstring summary should start at the second line
; D401 = First line should be in imperative mood (numpy style)
; D404 = First word of the docstring should not be This (numpy style)
; D405 = Section name should be properly capitalized (numpy style)
; D406 = Section name should end with a newline (numpy style)
; D407 = Missing dashed underline after section (numpy style)
; D408 = Section underline should be in the line following the sectionâ€™s name (numpy style)
; D409 = Section underline should match the length of its name (numpy style)
; D410 = Missing blank line after section (numpy style)
; D411 = Missing blank line before section (numpy style)
; D412 = No blank lines allowed between a section header and its content (numpy style)
; D413 = Missing blank line after last section (numpy style)
; D414 = Section has no content (numpy style)
ignore = D101,D106,D200,D203,D212,D213,D401,D404,D405,D406,D407,D408,D409,D410,D411,D412,D413,D414
match-dir = (?!migrations)

[pytest]
DJANGO_SETTINGS_MODULE = enterprise.settings.test
addopts = --cov enterprise --cov enterprise_learner_portal --cov consent --cov integrated_channels --cov-report term-missing --cov-report xml
norecursedirs = .* docs requirements node_modules

[isort]
line_length = 120
known_edx =
known_django = django
known_djangoapp = model_utils
known_first_party = consent,enterprise,enterprise_learner_portal,integrated_channels
include_trailing_comma = true
multi_line_output = 3
sections = FUTURE,STDLIB,THIRDPARTY,DJANGO,DJANGOAPP,EDX,FIRSTPARTY,LOCALFOLDER

[wheel]
universal = 1

[testenv]
setenv =
    TOXENV={envname}
deps =
    -r{toxinidir}/requirements/test.txt
    django22: Django>=2.2,<2.3
    django30: Django>=3.0,<3.1
commands =
    py.test -Wd {posargs}

[testenv:docs]
setenv =
    DJANGO_SETTINGS_MODULE = enterprise.settings.test
    PYTHONPATH = {toxinidir}
whitelist_externals =
    make
    rm
deps =
    -r{toxinidir}/requirements/doc.txt
commands =
    doc8 --ignore-path docs/decisions README.rst docs
    rm -f docs/enterprise.rst
    rm -f docs/modules.rst
    make -C docs clean
    make -C docs html
    python setup.py check --restructuredtext --strict

[testenv:isort]
deps =
    -r{toxinidir}/requirements/dev.txt
commands =
    isort --recursive tests test_utils enterprise enterprise_learner_portal consent integrated_channels manage.py setup.py

[testenv:isort-check]
deps =
    -r{toxinidir}/requirements/dev.txt
commands =
    isort --check-only --diff --recursive tests test_utils enterprise enterprise_learner_portal consent integrated_channels manage.py setup.py

[testenv:quality]
whitelist_externals =
    make
    rm
    touch
deps =
    -r{toxinidir}/requirements/dev.txt
commands =
    touch tests/__init__.py
    pylint -j 0 enterprise enterprise_learner_portal consent integrated_channels tests test_utils requirements/check_pins.py
    rm tests/__init__.py
    pycodestyle enterprise enterprise_learner_portal consent integrated_channels tests test_utils
    pydocstyle enterprise enterprise_learner_portal consent integrated_channels tests test_utils
    isort --check-only --diff --recursive tests test_utils enterprise enterprise_learner_portal consent integrated_channels manage.py setup.py

[testenv:jasmine]
passenv = JASMINE_BROWSER DISPLAY
deps =
    Django<2.0
    -r{toxinidir}/requirements/js_test.txt
commands =
    jasmine

[testenv:pii-annotations]
setenv =
    DJANGO_SETTINGS_MODULE = enterprise.settings.test
deps =
    Django>=2.2,<2.3
    -r{toxinidir}/requirements/test.txt
commands =
    code_annotations django_find_annotations --config_file .pii_annotations.yml --lint --report --coverage
