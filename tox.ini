[tox]
envlist = {py27,py36}-master

[doc8]
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D106 = Missing docstring in public nested class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
; D213 = Multi-line docstring summary should start at the second line
; D406 = Section name should end with a newline
; D407 = Missing dashed underline after section
; D411 = Missing blank line before section
; D412 = No blank lines allowed between a section header and its content
; D413 = Missing blank line after last section
ignore = D101,D106,D200,D203,D212,D213,D406,D407,D411,D412,D413
match-dir = (?!migrations)

[pytest]
DJANGO_SETTINGS_MODULE = enterprise.settings.test
addopts = --cov enterprise --cov consent --cov integrated_channels --cov-report term-missing --cov-report xml
norecursedirs = .* docs requirements node_modules

[isort]
line_length = 120
known_edx =
known_django = django
known_djangoapp = model_utils
known_first_party = consent,enterprise,integrated_channels
include_trailing_comma = true
multi_line_output = 3
sections = FUTURE,STDLIB,THIRDPARTY,DJANGO,DJANGOAPP,EDX,FIRSTPARTY,LOCALFOLDER

[wheel]
universal = 1

[testenv]
deps =
    master: -r{toxinidir}/requirements/test-master.txt
commands =
    py.test -Wd {posargs}

[testenv:docs]
setenv =
    DJANGO_SETTINGS_MODULE = enterprise.settings.test
    PYTHONPATH = {toxinidir}
whitelist_externals =
    make
    rm
deps =
    -r{toxinidir}/requirements/doc.txt
commands =
    doc8 --ignore-path docs/_build README.rst docs
    rm -f docs/enterprise.rst
    rm -f docs/modules.rst
    make -C docs clean
    make -C docs html
    python setup.py check --restructuredtext --strict

[testenv:isort]
deps =
    -r{toxinidir}/requirements/quality.txt
commands =
    isort --recursive tests test_utils enterprise consent integrated_channels manage.py setup.py

[testenv:isort-check]
deps =
    -r{toxinidir}/requirements/quality.txt
commands =
    isort --check-only --recursive tests test_utils enterprise consent integrated_channels manage.py setup.py

[testenv:quality]
whitelist_externals =
    make
    rm
    touch
deps =
    -r{toxinidir}/requirements/quality.txt
commands =
    touch tests/__init__.py
    pylint -j 0 enterprise consent integrated_channels tests test_utils
    pylint -j 0 --py3k enterprise consent integrated_channels tests test_utils
    rm tests/__init__.py
    pycodestyle enterprise consent integrated_channels tests test_utils
    pydocstyle enterprise consent integrated_channels tests test_utils
    isort --check-only --recursive tests test_utils enterprise consent integrated_channels manage.py setup.py

[testenv:jasmine]
passenv = JASMINE_BROWSER DISPLAY
deps =
    Django<2.0
    -r{toxinidir}/requirements/js_test.txt
commands =
    jasmine-ci

[testenv:pii-annotations]
setenv =
    DJANGO_SETTINGS_MODULE = enterprise.settings.test
deps =
    -r{toxinidir}/requirements/test-master.txt
commands =
    code_annotations django_find_annotations --config_file .pii_annotations.yml --lint --report --coverage
